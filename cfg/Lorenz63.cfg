general:
{
	# Results directory
	resDir = "../results/";
	specDir = "../results/spectrum/";
	plotDir = "../results/plot/";
	# Output file format:
 	fileFormat = "bin";
	#fileFormat = "txt";
};

model:	
{
	# Case name to define files:
	caseName = "Lorenz63";
	# Dimension of the model (time series):
	dim = 3;
	# Field parameters
#	rho = 23.9;
#	rho = 24.;
	rho = 25.;
#	rho = 26.;
#	rho = 27.;
#	rho = 28.;
	sigma = 10.;
	beta = 2.6666666666666665;
};

continuation:
{
	epsDist = 1.e-10;
	epsStepCorrSize = 1.e-8;
	maxIter = 1000;
	numShoot = 1;
	#contStep = 0.01;
	#contStep = -0.01;
	#contStep = 0.001;
	#contStep = -0.001;
	contStep = -0.0001;
	contMin = 0.;
	contMax = 30.;
	#verbose = true;
	verbose = false;
	# Periodic orbit correction for sigma = 0.8
	#initCont = [1.903806, 0.893549, -3.889728, -0.097373, 75.];
	# Fixed point at origin continuation
	#initCont = [0., 0., 0., 0.];
	# Asymmetric fixed point continuation
	#initCont = [1.6329, 1.6329, 1., 2.];
	# Periodic orbit continuation from Hopf bifurcation of upper pitchfork branch
	#initCont = [7.956126, 7.956126, 24.737477, 24.5, 0.652822];
	# Periodic orbit continuation close to homoclinic bifurcation
	initCont = [10.33683, 6.022949, 23.479173, 15.477484, 1.415303];
};

simulation:
{
	# Initial constant state:
	initState = [1., 1., 1.];
	# Time series length without spinup
#	LCut = 1.e6;
	LCut = 1.e5;
#	LCut = 1.e4;
	# Spinup duration:
 	spinup = 1.e3;
	# Time step of integration
	#dt = 1.e-3;
	#dt = 1.e-4;
	dt = 1.e-5;
	# Time step between prints
#	printStep = 1.e-1;
	printStep = 1.e-2;
#	printStep = 1.e-4;
	seedRng = [1, 2, 3, 4, 5];
#	seedRng = [1];
};

observable:
{
	# Components of the time series:
	components = [0, 1, 2];
	# Eventual delay of each component to embed (days):
	embeddingDays = [0., 0., 0.];
};

grid:
{
	readGridMem = false;
#	readGridMem = true;
	gridLimitsType = "fix";
#	gridLimitsType = "std";
	# Number of boxes in each direction and stand. dev. to span away from the mean state:
#	nx = [10, 10, 10];	    
#	nx = [20, 20, 20];
#	nx = [50, 50, 50];
#	nx = [100, 100, 100];
#	nx = [150, 150, 150];
#	nx = [200, 200, 200];
#	nx = [250, 250, 250];
	nx = [300, 300, 300];
#	nx = [350, 350, 350];
#	nx = [400, 400, 400];
#	nx = [450, 450, 450];
#	nx = [500, 500, 500];
};

transfer:
{
	# Lags for the transition matrix:
#	tauRng = [0.01, 0.02, 0.05, 0.1, 0.5, 1.];
	tauRng = [0.01];
#	tauRng = [0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1.];
	stationary = true;
};

spectrum:
{
	# Number of eigenvalues to look for:
#	nev = 100;
#	nev = 200;
	nev = 300;
	maxit = 1000;
	tol = 1.e-15;
	getForwardEigenvectors = true;
#	getForwardEigenvectors =  false;
	getBackwardEigenvectors = true;
#	getBackwardEigenvectors = false;
	makeBiorthonormal = false;
	nEigVecPlot = 1;
	plotBackward = False
	#plotBackward = True
	plotImag = False     
	#plotImag = True     
};

stat:
{
	# Lag of the transition matrix for which to plot
	tauPlot = 0.01
#	tauPlot = 0.1
	# Components to use as observables:
	idxf = 0;
	idxg = 0;
#	idxf = 2;
#	idxg = 2;
	# Maximum lag used to calculate the correlation function:
	lagMax = 10;
	# Multi-taper window used to calculate periodograms:
	chunkWidth = 100;
	# Limits for periodogram plot:
	angFreqMax = 40.;
	rateMax = 2.;
	powerMin = 1.e-3;
	powerMax = 1.e3;
	maxCondition = 50
	norm = False
};
